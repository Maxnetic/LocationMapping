package locationmapping;

import processing.core.PApplet;
import de.fhpotsdam.unfolding.*;
import de.fhpotsdam.unfolding.utils.*;
import de.fhpotsdam.unfolding.marker.*;
import de.fhpotsdam.unfolding.data.*;
import de.fhpotsdam.unfolding.geo.*;
import de.fhpotsdam.unfolding.providers.*;
import java.awt.event.KeyListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.Component;

public class LocationMap {
    PApplet app;
    UnfoldingMap unfoldingMap;
    boolean paused = false;

    /**
     * die Start Breite des Fensters
     */
    private int width = 800;
    /**
     * Die Start Höhe des Fensters
     */
    private int height = 1000;

    /**
     * Der Pauseknopf
     */
    PlayButton play;
    /**
     * Der "+"-Knopf
     */
    ZoomButton zoomIn;
    /**
     * Der "-"-Knopf
     */
    ZoomButton zoomOut;
    /**
     * Der Zoomslider
     */
    SliderButton slider;

    public final Location BERLIN = new Location(52.5f, 13.4f);

    private Location startLocation = BERLIN;
    private int startZoomLevel = 6;

    public LocationMap(PApplet app){
        this.unfoldingMap = new UnfoldingMap(app);
        this.app = app;
    }

    /**
     *
     */
    public void initalize() {
        // Fenstergröße Setzen und Anpassbar machen
        app.size(this.width, this.height);
        if( app.frame != null){
            app.frame.setResizable(false);
        }

        // Smoothes Kartenscrolling
        app.smooth();
        unfoldingMap.setTweening(true);

        // Setze Startort uns Zoomlevel der Karte
        unfoldingMap.zoomAndPanTo(this.startLocation, this.startZoomLevel);

        // Ermoeglicht Zoom und Pan auf Karte
        MapUtils.createDefaultEventDispatcher(app, unfoldingMap);

        // Zoom Buttons und Slider erstellen
        this.slider = new SliderButton(this, 150, 3, app.width, app.height);
        this.zoomIn = new ZoomButton(this, 175, 14, 15, 15, true);
        this.zoomOut = new ZoomButton(this, 0, 14, 15, 15, false);

        // Play Button erstellen
        this.play = new PlayButton(this, width, height);

        // erlaubt pause/unpause mit Leertaste
        // app.addKeyListener( new KeyAdapter(){
        //     public void keyPressed(KeyEvent e) {
        //         if (e.getKeyCode() == KeyEvent.VK_SPACE) {
        //             paused = !paused;
        //         }
        //     }
        // });
    }


    // void mouseClicked() {
    // //wenn auf Playbutton gedrückt, kehre Pausenstatus um
    // if (play.mouseOver()) {
    // pause = !pause;
    // }
    // // wenn auf "+" gedrückt, zoome hinein
    // if (zoomInto.mouseOver()) {
    // map.zoomLevelIn();
    // }
    // // wenn auf "-" gedrückt, zoome hinaus
    // if (zoomFrom.mouseOver()) {
    // map.zoomLevelOut();
    // }
    // // wenn auf den Slider gedrückt, zoome hinaein oder hinaus
    // if (slider.mouseOver()) {
    // if (mouseEvent.getX() < (20 + (150 * (map.getZoom() / 262144)))) {
    //     map.zoomLevelOut();
    // } else {
    //    map.zoomLevelIn();
    // };
    // }
    // }

    /**
     *
     */
    public void draw() {
        unfoldingMap.draw();

        //zeichne den Zoom Slider
        slider.draw();
        //zeichne den Zoomin Button
        zoomIn.draw();
        //zeichne den Zoomout Button
        zoomOut.draw();
        //zeichne den Pauseknopf
        play.draw();

        // if(iter.hasNext()){
        // if(frameCount % speed == 0 && pause == false){
        // Trackpoint curr = (Trackpoint) iter.next();
        // MyMarker tmp = new MyMarker(curr);
        // System.out.println(curr.getDateTime());
        // tmp.setStyle(curr.getService());
        // map.addMarker(tmp);
        //map.panTo(curr.getLocation());
        //System.out.println(curr.getDateTime());
        // }
        // }
    }

}
